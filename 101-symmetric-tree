# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSymmetric(self, root: TreeNode) -> bool:
        def mirrorTrees(t1,t2):
            if t1 == None or t2 == None:
                return t1 == t2
            if t1.val == t2.val: 
                return mirrorTrees(t1.right, t2.left) and mirrorTrees(t1.left, t2.right)
            else:
                return False
            
        if root == None:
            return True
        else:
            return mirrorTrees(root.left, root.right)
