# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        if root == None:
            return None
        else:
            root_val = root.val
            ancestor_p = p.val
            ancestor_q = q.val
            if ancestor_p > root_val and ancestor_q > root_val:
                return self.lowestCommonAncestor(root.right, p, q)
            elif ancestor_p < root_val and ancestor_q < root_val:
                return self.lowestCommonAncestor(root.left, p, q)
            return root
        
